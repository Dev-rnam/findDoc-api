generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             String         @id @default(uuid())
  email          String         @unique
  passwordHash   String
  firstName      String?
  lastName       String?
  gender         String?
  role           UserRole       @default(USER)
  balance        Float          @default(0.0)
  lat            Float?
  lng            Float?
  points         Int            @default(0)
  createdAt      DateTime       @default(now())
  reportLost     Report[]       @relation("LostBy")
  reportFound    Report[]       @relation("FoundBy")
  matchedReports Report[]       @relation("MatchedTo")
  notifications  Notification[]
  conversions   Conversion[]    @relation("Point")
  otp            Otp[]
  isActive       Boolean        @default(false)
}

model Otp {
  id        String   @id @default(uuid())
  code      String
  expiresAt DateTime
  userId    String   @unique
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt DateTime @default(now())
}

model Report {
  id          String       @id @default(uuid())
  type        ReportType
  status      ReportStatus @default(PENDING)
  category    Category
  data        Json
  lat         Float
  lng         Float
  createdBy   User         @relation("LostBy", fields: [createdById], references: [id])
  createdById String
  foundBy     User?        @relation("FoundBy", fields: [foundById], references: [id])
  foundById   String?
  matchedTo   User?        @relation("MatchedTo", fields: [matchedToId], references: [id])
  matchedToId String?
  validated   Boolean      @default(false)
  createdAt   DateTime     @default(now())
}

model Notification {
  id        String   @id @default(uuid())
  message   String
  isRead    Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
}

model Conversion {
  id              String   @id @default(uuid())
  pointsConverted Int
  moneyGained     Float
  user            User     @relation("Point", fields: [userId], references: [id])
  userId          String
  createdAt       DateTime @default(now())
}

enum ReportType {
  LOST
  FOUND
}

enum ReportStatus {
  PENDING
  MATCHED
  NOTIFIED
}

enum Category {
  CNI
  PASSEPORT
  PERMIS_AUTRE
}

enum UserRole {
  USER
  ADMIN
  POLICE
}
